import React, { useEffect, useState } from "react";
export var Step = function (_a) {
    var active = _a.active, done = _a.done, isFirst = _a.isFirst, isLast = _a.isLast, stepNumber = _a.stepNumber, iconColor = _a.iconColor, labelColor = _a.labelColor, children = _a.children, circleColor = _a.circleColor, withIcons = _a.withIcons, withNumbers = _a.withNumbers;
    var _b = useState(false), loading = _b[0], setLoading = _b[1];
    var _c = useState(""), iColor = _c[0], setIcolor = _c[1];
    var _d = useState(""), tColor = _d[0], setTcolor = _d[1];
    var _e = useState(""), crColor = _e[0], setCrColor = _e[1];
    var classNames = "stepper-step";
    if (done) {
        classNames += " step-done";
    }
    if (active) {
        classNames += " active-step";
    }
    //// SET COLORS WHICH USER NEEDES
    useEffect(function () {
        if (!iColor && iconColor) {
            if (iconColor.startsWith("#")) {
                setIcolor("" + iconColor);
            }
            else {
                setIcolor(getComputedStyle(document.documentElement).getPropertyValue("--" + iconColor));
            }
        }
        if (!crColor && circleColor) {
            if (circleColor.startsWith("#")) {
                setCrColor("" + circleColor);
            }
            else {
                setCrColor(getComputedStyle(document.documentElement).getPropertyValue("--" + circleColor));
            }
        }
        if (!tColor && labelColor) {
            if (labelColor.startsWith("#")) {
                setTcolor("" + labelColor);
            }
            else {
                setTcolor(getComputedStyle(document.documentElement).getPropertyValue("--" + labelColor));
            }
        }
        if (crColor || iColor || tColor || !loading) {
            setLoading(true);
        }
    }, [circleColor, crColor, iColor, iconColor, loading, tColor, labelColor]);
    return loading ? (React.createElement("div", { className: classNames },
        React.createElement("div", { className: "stepper-circle", style: {
                background: circleColor ? "" + crColor : "",
                color: iconColor ? "" + iColor : "",
                filter: !active ? "opacity(0.43)" : "none",
            } },
            React.createElement("span", null, withNumbers && stepNumber ? (stepNumber) : withIcons ? (React.createElement("i", { className: "" + withIcons })) : (stepNumber))),
        React.createElement("div", { className: "stepper-title", style: {
                color: "" + tColor,
                filter: !active ? "opacity(0.43)" : "none",
            } }, children),
        !isFirst ? React.createElement("div", { className: "stepper-bar-left" }) : null,
        !isLast ? React.createElement("div", { className: "stepper-bar-right" }) : null)) : null;
};
