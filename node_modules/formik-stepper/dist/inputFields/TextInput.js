var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useState, useEffect } from "react";
import { Input, InputGroup, InputGroupAddon, InputGroupText, Label, } from "reactstrap";
export var TextInput = function (_a) {
    var label = _a.label, placeholder = _a.placeholder, className = _a.className, iconStart = _a.iconStart, icon = _a.icon, symbol = _a.symbol, type = _a.type, props = __rest(_a, ["label", "placeholder", "className", "iconStart", "icon", "symbol", "type"]);
    var _b = useState(false), showPassword = _b[0], setShowPassword = _b[1];
    var _c = useState(false), isPassword = _c[0], setIsPassword = _c[1];
    useEffect(function () {
        setIsPassword(type === "password");
    }, [type]);
    return (React.createElement(React.Fragment, null,
        React.createElement(Label, null, label),
        React.createElement(InputGroup, null,
            React.createElement(Input, __assign({ placeholder: placeholder ? placeholder : label, className: className ? className : "form-control", type: isPassword && showPassword ? "text" : type ? type : "text" }, props)),
            iconStart ? (React.createElement(InputGroupAddon, { addonType: "prepend" },
                React.createElement(InputGroupText, null, iconStart && (React.createElement("i", { className: "" + iconStart, "aria-hidden": "true" }))))) : null,
            icon || symbol ? (React.createElement(InputGroupAddon, { addonType: "append" },
                React.createElement(InputGroupText, null,
                    symbol && React.createElement("span", null, symbol),
                    icon && React.createElement("i", { className: "" + icon, "aria-hidden": "true" })))) : null,
            isPassword ? (React.createElement(InputGroupAddon, { addonType: "append", style: { cursor: "pointer" }, onClick: function () { return setShowPassword(!showPassword); } },
                React.createElement(InputGroupText, null,
                    React.createElement("i", { className: "bi " + (showPassword ? "bi-eye-slash-fill" : "bi bi-eye-fill"), "aria-hidden": "true" })))) : null)));
};
